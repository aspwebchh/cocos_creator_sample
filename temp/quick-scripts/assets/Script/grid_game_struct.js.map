{"version":3,"sources":["grid_game_struct.js"],"names":["Grid","require","X","Y","gameBoard","statistics","addStatistics","length","getContinuous","list","field","result","tempResult","prev","i","item","push","concat","getContinuousGroup","groupsX","groupsY","j","results","key","array","sort","a","b","group","groups","grid","getNumber","getYGrids","pos","grids","getPos","gridID","getID","gridCount","randomGrid","r","Math","floor","random","g","setNumber","setID","cc","Class","getStatistics","initBoard","remove","gridMap","setTempState","writeState","testContinuable","board","testPos","testGrid","continuable","posClone","leftPos","rightPos","topPos","bottomPos","fillGameBoard","clearNew","clearMoveCount","getFirstEmptyPos","colMoveCount","index","addMoveCount","setMoveCount","swapGrid","gridID1","gridID2","pos1","pos2","console","log","grid1","grid2","getGameBoard"],"mappings":"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","file":"grid_game_struct.js","sourceRoot":"..\\..\\..\\..\\assets\\Script","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\nvar Grid = require(\"grid\");\r\n\r\nvar X = 6;\r\nvar Y = 5;\r\nvar gameBoard = [];\r\n\r\nvar statistics = {};\r\n\r\nvar addStatistics = function( length ) {\r\n    if( statistics[ length ] ) {\r\n        statistics[ length ] += 1;\r\n    } else {\r\n        statistics[ length ] = 1;\r\n    }\r\n}\r\n\r\nvar getContinuous = function( list, field ) {\r\n    var result = [];\r\n    var tempResult = [];\r\n    var prev;\r\n    for( var i = 0; i < list.length; i++ ) {\r\n        var item = list[ i ];\r\n        if( prev == null ) {\r\n            prev = item;\r\n            tempResult.push( item );\r\n        } else {\r\n            if( item[ field ] - prev[ field ] == 1 ) {\r\n                tempResult.push( item );\r\n            } else {\r\n                if( tempResult.length >= 3 ) {\r\n                    result = result.concat( tempResult );\r\n                    addStatistics( tempResult.length );\r\n                }\r\n                tempResult = [ item ];\r\n            }\r\n            prev = item;\r\n        }\r\n    }\r\n\r\n    if( tempResult.length >= 3 ) {\r\n        result = result.concat( tempResult );\r\n        addStatistics( tempResult.length );\t\t\t\t\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nvar getContinuousGroup = function( list ) {\r\n    var groupsX = {};\r\n    var groupsY = {};\r\n    for( var i = 0; i < list.length; i++ ) {\r\n        var item = list[ i ];\r\n        //横\r\n        if( !groupsX[ item.i ] ) {\r\n            groupsX[ item.i ] = [];\r\n        }\r\n        groupsX[ item.i ].push( item );\r\n        //纵\r\n        if( !groupsY[ item.j ] ) {\r\n            groupsY[ item.j ] = [];\r\n        }\r\n        groupsY[ item.j ].push( item );\t\t\t    \r\n    }\r\n\r\n    var results = [];\r\n\r\n    for( var key in groupsX ) {\r\n        var array = groupsX[ key ];\r\n        array.sort( function( a, b ) {\r\n            return a.j - b.j;\r\n        } );\r\n        results = results.concat( getContinuous( array, 'j' ) );\r\n    }\r\n\r\n    for( var key in groupsY ) {\r\n        var array = groupsY[ key ];\r\n        array.sort( function( a, b ) {\r\n            return a.i  - b.i;\r\n        } );\r\n        results = results.concat( getContinuous( array, 'i' ) );\r\n    }\r\n\r\n    return results;\r\n}\r\n\r\nvar group = function( gameBoard ) {\r\n    statistics = {};\r\n    var groups = {};\r\n    for( var i = 0; i < Y; i++ ) {\r\n        for(  var j = 0; j < X; j++ ) {\r\n            var grid = gameBoard[ i ][ j ];\r\n            if( !groups[ grid.getNumber() ] ) {\r\n                groups[ grid.getNumber() ] = [];\r\n            }\r\n            groups[ grid.getNumber() ].push( {\r\n                grid:  grid,\r\n                i: i, j: j \r\n            } );\r\n        }\r\n    }\t\t\t\r\n    return groups;\r\n}\r\n\r\nfunction getYGrids( pos ) {\t\r\n    var grids = [];\r\n    for( var i = 0; i < Y; i++ ) {\r\n        grids.push( gameBoard[ i ][ pos.j ] );\r\n    }\r\n    return grids;\r\n}\r\n\r\nfunction getPos( gridID ) {\r\n    for( var i = 0; i < Y; i++ ) {\r\n        for( var j = 0; j < X; j++ ) {\r\n            if( gameBoard[ i ][ j ].getID() == gridID ) {\r\n                return {\r\n                    i: i, j: j\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nvar gridCount = 0;\r\n\r\nfunction randomGrid() {\r\n    var r = Math.floor( Math.random() * 10 );\r\n    gridCount++;\r\n    var g = new Grid();\r\n    g.setNumber( r );\r\n    g.setID( gridCount );\r\n    return g; \t\r\n}\r\n\r\n\r\ncc.Class({\r\n    getStatistics() {\r\n        return statistics;\r\n    },\r\n\r\n    initBoard() {\r\n        for( var i = 0; i < Y; i++ ) {\r\n            gameBoard[ i ] =[];\r\n            for(  var j = 0; j < X; j++ ) {\r\n                gameBoard[ i ][ j ] = randomGrid();\t\t\r\n            }\r\n        }\r\n    },\r\n\r\n    remove() {\r\n        var groups = group( gameBoard );\r\n        var gridMap = {};\r\n        var grids = [];\r\n        for( var key in groups ) {\r\n            var list = getContinuousGroup( groups[ key ] );\r\n            for( var i = 0; i < list.length; i++ ) {\r\n                var item = list[ i ];\r\n                var grid = item.grid; \r\n                grid.setTempState();\r\n                grid.writeState();\r\n                gridMap[ grid.getID() ] =  grid;\r\n                gameBoard[ item.i ][ item.j ] = null;\r\n            }\r\n        }\r\n\r\n        for( var key in gridMap ) {\r\n            grids.push( gridMap[ key ] );\r\n        }\r\n        return grids;\r\n    },\r\n\r\n    testContinuable( board, pos, testPos ) {\r\n        if( testPos.i < 0 || testPos.i > Y - 1 || testPos.j < 0 || testPos.j > X - 1 ) {\r\n            return false;\r\n        }\r\n        var grid = board[ pos.i ][ pos.j ];\r\n        var testGrid = board[ testPos.i ][ testPos.j ];\r\n\r\n        board[ pos.i ][ pos.j ] = testGrid;\r\n        board[ testPos.i ][ testPos.j ] = grid;\r\n\r\n        var groups = group( board );\r\n        for( var key in groups ) {\r\n            var list = getContinuousGroup( groups[ key ] );\r\n            if( list.length > 0 ) {\r\n                board[ testPos.i ][ testPos.j ] = testGrid;\r\n                board[ pos.i ][ pos.j ] = grid;\r\n                return true;\r\n            }\r\n        }\r\n        board[ testPos.i ][ testPos.j ] = testGrid;\r\n        board[ pos.i ][ pos.j ] = grid;\t\t\t\r\n        return false;\r\n    },\r\n\r\n    continuable() {\r\n        var posClone = [];\r\n        for( var i = 0; i < Y; i++ ) {\r\n            posClone[ i ] = [];\r\n            for(  var j = 0; j < X; j++ ) {\r\n               posClone[ i ][ j ] = gameBoard[ i ][ j ];\r\n            }\r\n        }\t\t\t\t\r\n        //log( posClone );\r\n\r\n        for( var i = 0; i < Y; i++ ) {\r\n            for(  var j = 0; j < X; j++ ) {\r\n                var leftPos = { i: i, j: j - 1 };\r\n                var rightPos = { i: i, j: j + 1 };\r\n                var topPos = { i: i - 1, j: j };\r\n                var bottomPos = { i: i + 1, j: j };\r\n                if( this.testContinuable( posClone, { i: i, j: j }, leftPos ) ||\r\n                         this.testContinuable( posClone, { i: i, j: j }, rightPos ) ||\r\n                        this.testContinuable( posClone, { i: i, j: j }, topPos ) ||\r\n                        this.testContinuable( posClone, { i: i, j: j }, bottomPos ) ) {\r\n                    return true;\r\n                } \r\n            }\r\n        }\t\t\t\t\t\r\n        return false;\r\n    },\r\n\r\n    fillGameBoard : function() {\r\n        for( var i = 0; i < Y; i++ ) {\r\n            for( var j = 0; j < X; j++ ) {\r\n                if( gameBoard[ i ][ j ] != null ) {\r\n                    gameBoard[ i ][ j ].clearNew();\r\n                    gameBoard[ i ][ j ].clearMoveCount();\r\n                }\r\n            }\r\n        }\t\r\n\r\n        var pos =this.getFirstEmptyPos();\r\n        var colMoveCount = {};\r\n        while( pos ) {\r\n            if( colMoveCount[ pos.j ] ) {\r\n                colMoveCount[ pos.j ] ++ ;\r\n            } else {\r\n                colMoveCount[ pos.j ] = 1;\r\n            }\r\n            \r\n            var index = pos.i;\r\n            while( index < Y - 1 ) {\r\n                var grid =  gameBoard[ index + 1 ][ pos.j ];\r\n                grid.addMoveCount();\r\n                gameBoard[ index ][ pos.j ] = grid;\r\n                index++;\r\n            }\r\n            gameBoard[ Y - 1 ][ pos.j ] = randomGrid();\r\n            gameBoard[ Y - 1 ][ pos.j ].setMoveCount( colMoveCount[ pos.j ] - 1 );\r\n\r\n            pos = this.getFirstEmptyPos();\r\n        }\r\n    },\r\n\r\n    getFirstEmptyPos() {\r\n        for( let i = Y - 1; i >= 0; i-- ) {\r\n            for( let j = X - 1; j >= 0; j-- ) {\r\n                if( gameBoard[ i ][ j ] == null ) {\r\n                    return { i: i, j: j };\r\n                }\r\n            }\r\n        }\t\r\n    },\r\n\r\n    getPos( gridID ) {\r\n        return getPos( gridID );\r\n    },\r\n\r\n    swapGrid ( gridID1, gridID2 ) {\r\n        var pos1 = getPos( gridID1 );\r\n        var pos2 = getPos( gridID2 );\r\n        if(pos1== null || pos2 == null) {\r\n            console.log(pos1);\r\n            console.log(pos2);\r\n            console.log(gridID1);\r\n            console.log(gridID2);\r\n        }\r\n        var grid1 = gameBoard[ pos1.i ][ pos1.j ];\r\n        var grid2 = gameBoard[ pos2.i ][ pos2.j ];\r\n        gameBoard[ pos1.i ][ pos1.j ] = grid2;\r\n        gameBoard[ pos2.i ][ pos2.j ] = grid1;\r\n    },\r\n\r\n    getGameBoard() {\r\n        return gameBoard;\r\n    }\r\n});\r\n"]}